
package it.unibas.instcompview.view;

import bart.comparison.InstanceMatchTask;
import it.unibas.instcompview.Scenario;
import java.awt.Font;
import java.beans.PropertyChangeEvent;
import java.beans.PropertyChangeListener;
import java.util.Arrays;
import javax.swing.Action;
import javax.swing.BorderFactory;
import javax.swing.JComponent;
import javax.swing.JToolBar;
import javax.swing.border.TitledBorder;
import org.netbeans.core.spi.multiview.CloseOperationState;
import org.netbeans.core.spi.multiview.MultiViewElement;
import org.netbeans.core.spi.multiview.MultiViewElementCallback;
import org.openide.awt.UndoRedo;
import org.openide.util.Lookup;
import org.openide.util.NbBundle;
import org.openide.util.lookup.Lookups;
import org.openide.windows.TopComponent;
import speedy.SpeedyConstants;

/**
 *
 * @author aurelio.sofia
 */
@MultiViewElement.Registration(
        displayName = "#LBL_RecapMVE",
        mimeType = "application/x-comparison",
        persistenceType = TopComponent.PERSISTENCE_NEVER,
        preferredID = "RecapMVE",
        position = 10)
@NbBundle.Messages("LBL_RecapMVE=Results")
public class RecapMVE extends javax.swing.JPanel 
        implements MultiViewElement{

    /**
     * Creates new form RecapMVE
     */
    
    private MultiViewElementCallback callback = null;
    private InstanceMatchTask result;
    private Scenario scenario;
    private RecapPanel rePanel;
    
    private final Listener listener = new Listener();
    private Lookup.Result<Scenario> lookupResult;
    
    public RecapMVE(Lookup lookup) {
        this.scenario = lookup.lookup(Scenario.class);
        this.result = scenario.getResult();
        initComponents();
        initRecapPanel();
    }
    
    private void initRecapPanel() {
        rePanel = new RecapPanel(); 
        TitledBorder nameBorder = BorderFactory.createTitledBorder("In this scenario...");
        nameBorder.setTitleFont(new Font("Ubuntu", Font.ITALIC, 15));
        nameBorder.setTitlePosition(TitledBorder.CENTER);
        rePanel.setBorder(nameBorder);
        rePanel.getStrategyLabel().setText(scenario.getStrategy());
        rePanel.getScoreLabel().setText(Double.toString(result.getTupleMapping().getScore()));
        rePanel.setInjectiveLabelText(Boolean.toString(scenario.isInjective()));
        rePanel.setFunctionalLabelText(Boolean.toString(scenario.isFunctional()));
        rePanel.setkLabelText(Double.toString(scenario.getK()));
        rePanel.setForceLabelText(Boolean.toString(scenario.isForceExaustiveSearch()));
        rePanel.setTwoWayLabelText(Boolean.toString(scenario.isTwoWayValueMapping()));
        rePanel.setStopLabelText(Boolean.toString(scenario.isStopIfNonMatchingTuples()));
        rePanel.setConvertSkolemLabelText(Boolean.toString(scenario.isConvertSkolemInHash()));
        rePanel.setNullPrefixesLabelText(Arrays.asList(SpeedyConstants.getStringSkolemPrefixes()).toString());
        rePanel.setNmNumberLeftLabelText(Integer.toString(result.getTupleMapping().getLeftNonMatchingTuples().size()));
        rePanel.setNmNumberRightLabelText(Integer.toString(result.getTupleMapping().getRightNonMatchingTuples().size()));
      
        this.recapScrollPane.setViewportView(rePanel);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        recapScrollPane = new javax.swing.JScrollPane();

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(recapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(recapScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 300, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents

    @Override
    public JComponent getVisualRepresentation() {
        return this;
    }

    @Override
    public JComponent getToolbarRepresentation() {
        JToolBar jtb = new JToolBar();
        jtb.setFloatable(false);
        return jtb;
    }

    @Override
    public Action[] getActions() {
        if(callback != null)   {
            return callback.createDefaultActions();
        }
        Action[] a = {};
        return a;
    }

    @Override
    public Lookup getLookup() {
        return Lookups.singleton(scenario);
    }

     @Override
    public void componentOpened() {
        scenario.addPropertyChangeListener(listener);
    }

    @Override
    public void componentClosed() {
        scenario.removePropertyChangeListener(listener);
    }

    @Override
    public void componentShowing() {
        
    }

    @Override
    public void componentHidden() {}

    @Override
    public void componentActivated() {
    }

    @Override
    public void componentDeactivated() {}

    @Override
    public UndoRedo getUndoRedo() {
        return UndoRedo.NONE;
    }

    @Override
    public void setMultiViewCallback(MultiViewElementCallback callback) {
        this.callback = callback;
        callback.getTopComponent().setDisplayName(scenario.getScenario() + " - Comparison Result");
    }

    @Override
    public CloseOperationState canCloseElement() {
        return CloseOperationState.STATE_OK;
    }

    
    private class Listener implements PropertyChangeListener {

        @Override
        public void propertyChange(PropertyChangeEvent evt) {
            rePanel.getChangeLabel().setVisible(true);
            callback.getTopComponent().requestActive();
        }
        
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JScrollPane recapScrollPane;
    // End of variables declaration//GEN-END:variables
}
