package it.unibas.instcompview.view;

import it.unibas.instcompview.AutoResizeSwitcher;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JScrollBar;
import speedy.model.database.TupleWithTable;

/**
 *
 * @author aurelio.sofia
 */
public class TupleMappingPanel extends javax.swing.JPanel {

    /**
     * Creates new form TupleMappingPanel
     */
    
    private List<TupleWithTable> leftTuples = new ArrayList<>();
    private List<TupleWithTable> rightTuples = new ArrayList<>();
    
    public TupleMappingPanel(List<TupleWithTable> leftTuples, List<TupleWithTable> rightTuples, boolean syncScroll) {
        initComponents();
        this.leftTuples = leftTuples;
        this.rightTuples = rightTuples;
        if(syncScroll)synchronizeScrollers();
        initTables();
    }
    
    private void synchronizeScrollers(){
        JScrollBar leftVerticalBar = leftScrollPane.getVerticalScrollBar();
        JScrollBar rightVerticalBar = rightScrollPane.getVerticalScrollBar();
        leftVerticalBar.setModel(rightVerticalBar.getModel());
        JScrollBar leftHorizontalBar = leftScrollPane.getHorizontalScrollBar();
        JScrollBar rightHorizontalBar = rightScrollPane.getHorizontalScrollBar();
        leftHorizontalBar.setModel(rightHorizontalBar.getModel());
    }
    
    private void initTables() {
        leftTableLabel.setText("LEFT: " + leftTuples.get(0).getTable());
        rightTableLabel.setText("RIGHT: " + rightTuples.get(0).getTable());
        leftTable.setModel(new MappingTableModel(this.leftTuples));
        rightTable.setModel(new MappingTableModel(this.rightTuples));
        AutoResizeSwitcher.autoResizeSwitcher(leftTable);
        AutoResizeSwitcher.autoResizeSwitcher(rightTable);
    }
    
    public void setLeftTableLabel(String text){
        this.leftTableLabel.setText(text);
    }
    
    public void setRightTableLabel(String text){
        this.rightTableLabel.setText(text);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSeparator1 = new javax.swing.JSeparator();
        leftScrollPane = new javax.swing.JScrollPane();
        leftTable = new javax.swing.JTable();
        rightScrollPane = new javax.swing.JScrollPane();
        rightTable = new javax.swing.JTable();
        leftTableLabel = new javax.swing.JLabel();
        rightTableLabel = new javax.swing.JLabel();

        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        leftTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(0, 128, 128)));
        leftTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        leftTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        leftTable.getTableHeader().setReorderingAllowed(false);
        leftScrollPane.setViewportView(leftTable);
        if (leftTable.getColumnModel().getColumnCount() > 0) {
            leftTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.leftTable.columnModel.title0")); // NOI18N
            leftTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.leftTable.columnModel.title1")); // NOI18N
            leftTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.leftTable.columnModel.title2")); // NOI18N
            leftTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.leftTable.columnModel.title3")); // NOI18N
        }

        rightTable.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 165, 0)));
        rightTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        rightTable.getTableHeader().setReorderingAllowed(false);
        rightScrollPane.setViewportView(rightTable);
        if (rightTable.getColumnModel().getColumnCount() > 0) {
            rightTable.getColumnModel().getColumn(0).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.rightTable.columnModel.title0")); // NOI18N
            rightTable.getColumnModel().getColumn(1).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.rightTable.columnModel.title1")); // NOI18N
            rightTable.getColumnModel().getColumn(2).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.rightTable.columnModel.title2")); // NOI18N
            rightTable.getColumnModel().getColumn(3).setHeaderValue(org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.rightTable.columnModel.title3")); // NOI18N
        }

        leftTableLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        leftTableLabel.setForeground(new java.awt.Color(0, 128, 128));
        org.openide.awt.Mnemonics.setLocalizedText(leftTableLabel, org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.leftTableLabel.text")); // NOI18N

        rightTableLabel.setFont(new java.awt.Font("Ubuntu", 1, 18)); // NOI18N
        rightTableLabel.setForeground(new java.awt.Color(255, 165, 0));
        rightTableLabel.setHorizontalAlignment(javax.swing.SwingConstants.TRAILING);
        org.openide.awt.Mnemonics.setLocalizedText(rightTableLabel, org.openide.util.NbBundle.getMessage(TupleMappingPanel.class, "TupleMappingPanel.rightTableLabel.text")); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(leftScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 303, Short.MAX_VALUE)
                    .addComponent(leftTableLabel))
                .addGap(14, 14, 14)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(rightTableLabel)
                    .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 308, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(leftTableLabel)
                    .addComponent(rightTableLabel))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator1)
                    .addComponent(leftScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(rightScrollPane, javax.swing.GroupLayout.DEFAULT_SIZE, 125, Short.MAX_VALUE))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JScrollPane leftScrollPane;
    private javax.swing.JTable leftTable;
    private javax.swing.JLabel leftTableLabel;
    private javax.swing.JScrollPane rightScrollPane;
    private javax.swing.JTable rightTable;
    private javax.swing.JLabel rightTableLabel;
    // End of variables declaration//GEN-END:variables

    
}
